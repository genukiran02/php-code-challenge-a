{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "php-code-challenge by Korri",
    "description": "This is my take on the 2h challenge"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/geolocation": {
      "get": {
        "operationId": "getGeolocation",
        "description": "Get geolocation for client IP",
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "type": "string",
            "enum": [ "ip-api", "freegeoip"],
            "description": "Geolocalization service to use",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Geolocation"
            }
          },
          "500": {
            "description": "An error occured",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/geolocation/{ip}": {
      "get": {
        "operationId": "getGeolocationByIp",
        "description": "Get geolocation for a specific IP",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "type": "string",
            "description": "The IP address",
            "required": true
          },
          {
            "name": "service",
            "in": "query",
            "type": "string",
            "enum": [ "ip-api", "freegeoip"],
            "description": "Geolocalization service to use",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Geolocation"
            }
          },
          "500": {
            "description": "An error occured",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/weather": {
      "get": {
        "operationId": "getWeather",
        "description": "Get wather at location of client IP",
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "type": "string",
            "enum": [ "ip-api", "freegeoip"],
            "description": "Geolocalization service to use",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Weather"
            }
          },
          "500": {
            "description": "An error occured",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/weather/{ip}": {
      "get": {
        "operationId": "getWeatherByIp",
        "description": "Get wather at location of a specific IP",
        "parameters": [
          {
            "name": "ip",
            "in": "path",
            "type": "string",
            "description": "The IP address",
            "required": true
          },
          {
            "name": "service",
            "in": "query",
            "type": "string",
            "enum": [ "ip-api", "freegeoip"],
            "description": "Geolocalization service to use",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Weather"
            }
          },
          "500": {
            "description": "An error occured",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Geolocation": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "geo": {
          "type": "object",
          "properties": {
            "service": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "country": {
              "type": "string"
            }
          }
        }
      }
    },
    "Weather": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "temperature": {
          "type": "object",
          "properties": {
            "current": {
              "type": "integer"
            },
            "low": {
              "type": "integer"
            },
            "high": {
              "type": "integer"
            }
          }
        },
        "wind": {
          "type": "object",
          "properties": {
            "speed": {
              "type": "integer"
            },
            "direction": {
              "type": "integer"
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}